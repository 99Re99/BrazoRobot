import cv2
import numpy as np


cap1=cv2.VideoCapture("videoFigs.mp4")
cap=cv2.VideoCapture(0)

def obContorno(img):
    contorno,jerarquia=cv2.findContours(img,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_NONE)
    for cnt in contorno:
        area=cv2.contourArea(cnt)
        print(area)
        if area>500:
            cv2.drawContours(frame,cnt,-1,(0,0,255),3)
            perimetro=cv2.arcLength(cnt,True)
            print(perimetro)
            aprrox=cv2.approxPolyDP(cnt,0.02*perimetro,True)
            print(len(aprrox))
            objEsquina=len(aprrox)
            x,y,w,h=cv2.boundingRect(aprrox)
            if objEsquina==3:
                objectType="Triangulo"
            elif objEsquina==4:
                aspecto= w/float(h)
                if aspecto>0.95 and aspecto <1.05:
                    objectType="cuadrado"
                else:
                    objectType="Rectangulo"
            elif objEsquina >4:
                objectType="Circulo"
            else:
                objectType="Nada"

            cv2.rectangle(frame,(x,y),(x+w,y+h),(0,0,255),2)
            cv2.putText(frame,objectType,(x+(w//2)-10,y+(h//2)-10),cv2.FONT_HERSHEY_COMPLEX,0.7,(0,0,0),2)

while True:
    ret,frame=cap.read()
    #imgContour=frame.copy()
    imgGray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    imgBlur=cv2.GaussianBlur(imgGray,(7,7),1)
    imgCanny=cv2.Canny(imgBlur,50,50)
    obContorno(imgCanny)
    cv2.imshow("Figuras geometricas",frame)


    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cv2.destroyAllWindows()